plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.insidemovie'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Swagger UI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// H2
	runtimeOnly 'com.h2database:h2'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Jwt
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// Spring WebFlux (WebClient 포함)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// JSON ↔ Java 객체 바인딩
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

}

tasks.named('test') {
	useJUnitPlatform()
}
